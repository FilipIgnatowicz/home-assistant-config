switch:

  - platform: command_line
    switches:
      mix:
        friendly_name: Mix
        command_on: "curl -X PUT !secret itunes_ip:8181/playlists/a-45-star/play"
        command_off: "curl -X PUT !secret itunes_ip:8181/playlists/a-45-star/play"
  - platform: command_line
    switches:
      jazz:
        friendly_name: Jazz
        command_on: "curl -X PUT !secret itunes_ip:8181/playlists/best-jazz/play"
        command_off: "curl -X PUT !secret itunes_ip:8181/playlists/best-jazz/play"
  - platform: command_line
    switches:
      rock:
        friendly_name: Rock
        command_on: "curl -X PUT http://!secret itunes_ip:8181/playlists/best-rock/play"
        command_off: "curl -X PUT http://!secret itunes_ip:8181/playlists/best-rock/play"
  - platform: command_line
    switches:
      pop:
        friendly_name: Pop
        command_on: "curl -X PUT http://!secret itunes_ip:8181/playlists/best-pop/play"
        command_off: "curl -X PUT http://!secret itunes_ip:8181/playlists/best-pop/play"
  - platform: command_line
    switches:
      black:
        friendly_name: Black
        command_on: "curl -X PUT http://!secret itunes_ip:8181/playlists/best-black/play"
        command_off: "curl -X PUT http://!secret itunes_ip:8181/playlists/best-black/play"
  - platform: command_line
    switches:
      classical:
        friendly_name: Classical
        command_on: "curl -X PUT http://!secret itunes_ip:8181/playlists/classical/play"
        command_off: "curl -X PUT http://!secret itunes_ip:8181/playlists/classical/play"
  - platform: command_line
    switches:
      electronica:
        friendly_name: Electronica
        command_on: "curl -X PUT http://!secret itunes_ip:8181/playlists/best-electronica/play"
        command_off: "curl -X PUT http://!secret itunes_ip:8181/playlists/best-electronica/play"
  - platform: command_line
    switches:
      kids:
        friendly_name: Kids
        command_on: "curl -X PUT http://!secret itunes_ip:8181/playlists/kids-english/play"
        command_off: "curl -X PUT http://!secret itunes_ip:8181/playlists/kids-english/play"

#  - platform: template
#    switches:
#      all_speakers:
#        turn_on:
#          service: media_player.turn_on
#          data:
#            entity_id: 
#              -  group.all_speakers
#        turn_off:
#          service: media_player.turn_off
#          data:
#            entity_id: 
#              - group.all_speakers

camera:

#  - name: Front Outdoor
#    platform: mjpeg
#    mjpeg_url: http://!secret front_cam_ip/Streaming/Channels/2/preview
#    username: !secret uname
#    password: !secret hass_pass
#
#  - name: Right Side Outdoor
#    platform: mjpeg
#    mjpeg_url: http://!secret right_cam_ip/Streaming/Channels/2/preview
#    username: !secret uname
#    password: !secret hass_pass
#
#  - name: Left Side Outdoor
#    platform: mjpeg
#    mjpeg_url: http://!secret left_cam_ip/Streaming/Channels/2/preview
#    username: !secret uname
#    password: !secret hass_pass
#
#  - name: Back Outdoor
#    platform: mjpeg
#    mjpeg_url: http://!secret back_cam_ip/Streaming/Channels/2/preview
#    username: !secret uname
#    password: !secret hass_pass

#  - platform: generic
#    name: WeatherGraph
#    still_image_url: https://www.yr.no/place/Czech_Republic/Prague/Prague/meteogram.svg
#    content_type: 'image/svg+xml'


sensor:

#  - platform: synologydsm
#    host: !secret synology_ip
#    port: 5000
#    ssl: false
#    username: !secret syn_uname
#    password: !secret hass_pass
#    monitored_conditions:
#      - memory_real_usage
#      - network_up
#      - disk_smart_status
#      - disk_status
#      - disk_exceed_bad_sector_thr
#      - disk_below_remain_life_thr
#      - volume_percentage_used
#      - volume_disk_temp_avg
#      - volume_disk_temp_max
#  - platform: deluge
#    host: !secret deluge_ip
#    username: !secret deluge_uname
#    password: !secret deluge_pw
#    monitored_variables:
#      - 'current_status'
#      - 'download_speed'
#      - 'upload_speed'

#  - platform: glances
#    name: xanadu
#    host: 10.10.10.20
#    resources:
#      - 'disk_use_percent'
#      - 'disk_free'
#      - 'memory_use_percent'

#  - platform: mqtt
#    name: "Power Consumption"
#    state_topic: !secret smappee_state_topic
#    unit_of_measurement: "W"
#    value_template: "{{value_json.totalPower}}"
#    icon: mdi:power-plug
#
#  - platform: template
#    sensors:
#      current_rate_power_cost_per_day:
#        friendly_name: "Current Electricity Use"
#        unit_of_measurement: 'Kč/day'
#        value_template: "{{ ((states('sensor.power_consumption')|float * 0.01011816)|round())*10 }}"


binary_sensor:

  - name: Motion Front of House
    platform: hikvision
    host: !secret front_cam_ip
    username: !secret uname
    password: !secret hass_pass

  - name: Motion Right Side of House
    platform: hikvision
    host: !secret right_cam_ip
    username: !secret uname
    password: !secret hass_pass

  - name: Motion Left Side of House
    platform: hikvision
    host: !secret left_cam_ip
    username: !secret uname
    password: !secret hass_pass

  - name: Motion Back of House
    platform: hikvision
    host: !secret back_cam_ip
    username: !secret uname
    password: !secret hass_pass
    
history_graph:
  gr1:
    name: Entrance Temperatures
    entities:
      - climate.entrance
    hours_to_show: 23
    refresh: 60
  gr2:
    name: Dining Room Temperatures
    entities:
      - climate.dining_room
    hours_to_show: 23
    refresh: 60
  gr3:
    name: Living Room Temperatures
    entities:
      - climate.living_room
    hours_to_show: 23
    refresh: 60
  gr4:
    name: Master Bedroom Temperatures
    entities:
      - climate.master_bedroom
    hours_to_show: 23
    refresh: 60
  gr5:
    name: Master Bath Temperatures
    entities:
      - climate.master_bath
    hours_to_show: 23
    refresh: 60
  gr6:
    name: Master Closet Temperatures
    entities:
      - climate.master_closet
    hours_to_show: 23
    refresh: 60
  gr7:
    name: Office & Library Temperatures
    entities:
      - climate.office__library
    hours_to_show: 23
    refresh: 60
  gr8:
    name: Sebastians Room Temperatures
    entities:
      - climate.sebastians_room
    hours_to_show: 23
    refresh: 60
  gr9:
    name: Sophies Room Temperatures
    entities:
      - climate.sophies_room
    hours_to_show: 23
    refresh: 60
  gr10:
    name: Guest Bedroom Temperatures
    entities:
      - climate.guest_bedroom
    hours_to_show: 23
    refresh: 60
  gr11:
    name: Garage Temperatures
    entities:
      - climate.garage
    hours_to_show: 23
    refresh: 60
  gr12:
    name: Basement Temperatures
    entities:
      - climate.basement
    hours_to_show: 23
    refresh: 60
#  gr13:
#    name: Motion Detection Times
#    entities:
#      - binary_sensor.motion_back_of_house_motion
#      - binary_sensor.motion_front_of_house_motion
#      - binary_sensor.motion_left_side_of_house_motion
#      - binary_sensor.motion_right_side_of_house_motion
#    hours_to_show: 12
#    refresh: 60

sensors:
#  - platform: template
#    sensors:
#      last_object_left:
#        friendly_name: "Last Object-Left"
#        value_template: >-
#          {% if 'person' in state_attr('image_processing.tensorflow_left', 'summary') %}
#            Person Detected
#          {% elif 'dog' in state_attr('image_processing.tensorflow_left', 'summary') %}
#            Dog Detected
#          {% elif 'cat' in state_attr('image_processing.tensorflow_left', 'summary') %}
#            Cat Detected
#          {% else %}
#            {{states('sensor.last_object_left')}}
#          {% endif %}
#
#  - platform: template
#    sensors:
#      last_object_right:
#        friendly_name: "Last Object-Right"
#        value_template: >-
#          {% if 'person' in state_attr('image_processing.tensorflow_right', 'summary') %}
#            Person Detected
#          {% elif 'dog' in state_attr('image_processing.tensorflow_right', 'summary') %}
#            Dog Detected
#          {% elif 'cat' in state_attr('image_processing.tensorflow_right', 'summary') %}
#            Cat Detected
#          {% else %}
#            {{states('sensor.last_object_right')}}
#          {% endif %}
#  
#  - platform: template
#    sensors:
#      last_object_time_back:
#        friendly_name: "Last Object Time-Back"
#        value_template: >-
#          {% if 'person' in state_attr('image_processing.tensorflow_back', 'summary') %}
#            {{now().strftime('%Y-%m-%d %H:%M:%S')}}
#          {% elif 'dog' in state_attr('image_processing.tensorflow_back', 'summary') %}
#            {{now().strftime('%Y-%m-%d %H:%M:%S')}}
#          {% elif 'cat' in state_attr('image_processing.tensorflow_back', 'summary') %}
#            {{now().strftime('%Y-%m-%d %H:%M:%S')}}
#          {% else %}
#            {{states('sensor.last_object_time_back')}}
#          {% endif %}
#
#  - platform: template
#    sensors:
#      last_object_time_front:
#        friendly_name: "Last Object Time-Front"
#        value_template: >-
#          {% if 'person' in state_attr('image_processing.tensorflow_front', 'summary') %}
#            {{now().strftime('%Y-%m-%d %H:%M:%S')}}
#          {% elif 'dog' in state_attr('image_processing.tensorflow_front', 'summary') %}
#            {{now().strftime('%Y-%m-%d %H:%M:%S')}}
#          {% elif 'cat' in state_attr('image_processing.tensorflow_front', 'summary') %}
#            {{now().strftime('%Y-%m-%d %H:%M:%S')}}
#          {% elif 'car' in state_attr('image_processing.tensorflow_front', 'summary') %}
#            {{now().strftime('%Y-%m-%d %H:%M:%S')}}
#          {% else %}
#            {{states('sensor.last_object_time_front')}}
#          {% endif %}
#          
#  - platform: template
#    sensors:
#      last_object_time_left:
#        friendly_name: "Last Object Time-Left"
#        value_template: >-
#          {% if 'person' in state_attr('image_processing.tensorflow_left', 'summary') %}
#            {{now().strftime('%Y-%m-%d %H:%M:%S')}}
#          {% elif 'dog' in state_attr('image_processing.tensorflow_left', 'summary') %}
#            {{now().strftime('%Y-%m-%d %H:%M:%S')}}
#          {% elif 'cat' in state_attr('image_processing.tensorflow_left', 'summary') %}
#            {{now().strftime('%Y-%m-%d %H:%M:%S')}}
#          {% else %}
#            {{states('sensor.last_object_time_left')}}
#          {% endif %}
#
#  - platform: template
#    sensors:
#      last_object_time_right:
#        friendly_name: "Last Object Time-Right"
#        value_template: >-
#          {% if 'person' in state_attr('image_processing.tensorflow_right', 'summary') %}
#            {{now().strftime('%Y-%m-%d %H:%M:%S')}}
#          {% elif 'dog' in state_attr('image_processing.tensorflow_right', 'summary') %}
#            {{now().strftime('%Y-%m-%d %H:%M:%S')}}
#          {% elif 'cat' in state_attr('image_processing.tensorflow_right', 'summary') %}
#            {{now().strftime('%Y-%m-%d %H:%M:%S')}}
#          {% else %}
#            {{states('sensor.last_object_time_right')}}
#          {% endif %}
#
#  - platform: template
#    sensors:
#      tensorflow_summary_right:
#        friendly_name: "Tensorflow Summary Right"
#        value_template: "{{ state_attr('image_processing.tensorflow_right', 'summary') }}"
#
#  - platform: template
#    sensors:
#      tensorflow_summary_left:
#        friendly_name: "Tensorflow Summary Left"
#        value_template: "{{ state_attr('image_processing.tensorflow_left', 'summary') }}"
#
#  - platform: template
#    sensors:
#      tensorflow_summary_front:
#        friendly_name: "Tensorflow Summary Front"
#        value_template: "{{ state_attr('image_processing.tensorflow_front', 'summary') }}"
#
#  - platform: template
#    sensors:
#      tensorflow_summary_back:
#        friendly_name: "Tensorflow Summary Back"
#        value_template: "{{ state_attr('image_processing.tensorflow_back', 'summary') }}"

#  - platform: local_file
#    name: Last Object Detected - Left
#    file_path: /home/homeassistant/.homeassistant/securitypics/left_latest.jpg
#
#  - platform: local_file
#    name: Last Object Detected - Right
#    file_path: /home/homeassistant/.homeassistant/securitypics/right_latest.jpg
#
#  - platform: local_file
#    name: Last Object Detected - Front
#    file_path: /home/homeassistant/.homeassistant/securitypics/front_latest.jpg
#
#  - platform: local_file
#    name: Last Object Detected - Back
#    file_path: /home/homeassistant/.homeassistant/securitypics/back_latest.jpg
#  - name: Left Side Outdoor
#    platform: onvif
#    host: !secret left_cam_ip
#    username: !secret uname
#    password: !secret hass_pass
#    extra_arguments: -vf "transpose=2"
#
#  - name: Right Side Outdoor
#    platform: onvif
#    host: !secret right_cam_ip
#    username: !secret uname
#    password: !secret hass_pass
#    extra_arguments: -vf "transpose=2"
#
#image_processing:
#
#  - platform: tensorflow
#    scan_interval: 5
#    source:
#      - entity_id: camera.back
#      - entity_id: camera.right
#      - entity_id: camera.left
#      - entity_id: camera.front
#    model:
#      graph: /home/homeassistant/c9workspace/homeassistant/tensorflow/ssd_mobilenet_v2_coco_2018_03_29/frozen_inference_graph.pb
#      categories:
#        - person
#        - car
#        - truck
#        - cat
#        - dog
#        - squirrel
#    file_out:
#      - "/home/homeassistant/.homeassistant/securitypics/{{ camera_entity.split('.')[1] }}_latest.jpg"
#      - "/home/homeassistant/.homeassistant/securitypics/{{ camera_entity.split('.')[1] }}_{{ now().strftime('%Y%m%d_%H%M%S') }}.jpg"   

sensors:

#  - platform: template
#    sensors:
#      object_detection_back:
#        friendly_name: "Back Yard"
#        value_template: >-
#          {% if 'person' in state_attr('image_processing.tensorflow_back', 'summary') %}
#            Person Detected
#          {% elif 'dog' in state_attr('image_processing.tensorflow_back', 'summary') %}
#            Dog Detected
#          {% elif 'cat' in state_attr('image_processing.tensorflow_back', 'summary') %}
#            Cat Detected
#          {% endif %}
#
#  - platform: template
#    sensors:
#      object_detection_front:
#        friendly_name: "Front Gate"
#        value_template: >-
#          {% if 'person' in state_attr('image_processing.tensorflow_front', 'summary') %}
#            Person Detected
#          {% elif 'dog' in state_attr('image_processing.tensorflow_front', 'summary') %}
#            Dog Detected
#          {% elif 'cat' in state_attr('image_processing.tensorflow_front', 'summary') %}
#            Cat Detected
#          {% elif 'car' in state_attr('image_processing.tensorflow_front', 'summary') %}
#            Car Detected
#          {% endif %}
#          
#  - platform: template
#    sensors:
#      object_detection_left:
#        friendly_name: "Left of House"
#        value_template: >-
#          {% if 'person' in state_attr('image_processing.tensorflow_left', 'summary') %}
#            Person Detected
#          {% elif 'dog' in state_attr('image_processing.tensorflow_left', 'summary') %}
#            Dog Detected
#          {% elif 'cat' in state_attr('image_processing.tensorflow_left', 'summary') %}
#            Cat Detected
#          {% endif %}
#
#  - platform: template
#    sensors:
#      object_detection_right:
#        friendly_name: "Right of House"
#        value_template: >-
#          {% if 'person' in state_attr('image_processing.tensorflow_right', 'summary') %}
#            Person Detected
#          {% elif 'dog' in state_attr('image_processing.tensorflow_right', 'summary') %}
#            Dog Detected
#          {% elif 'cat' in state_attr('image_processing.tensorflow_right', 'summary') %}
#            Cat Detected
#          {% endif %}
#
#  - platform: template
#    sensors:
#      last_object_back:
#        friendly_name: "Last Object-Back"
#        value_template: >-
#          {% if 'person' in state_attr('image_processing.tensorflow_back', 'summary') %}
#            Person Detected
#          {% elif 'dog' in state_attr('image_processing.tensorflow_back', 'summary') %}
#            Dog Detected
#          {% elif 'cat' in state_attr('image_processing.tensorflow_back', 'summary') %}
#            Cat Detected
#          {% else %}
#            {{states('sensor.last_object_back')}}
#          {% endif %}
#
#  - platform: template
#    sensors:
#      last_object_front:
#        friendly_name: "Last Object-Front"
#        value_template: >-
#          {% if 'person' in state_attr('image_processing.tensorflow_front', 'summary') %}
#            Person Detected
#          {% elif 'dog' in state_attr('image_processing.tensorflow_front', 'summary') %}
#            Dog Detected
#          {% elif 'cat' in state_attr('image_processing.tensorflow_front', 'summary') %}
#            Cat Detected
#          {% elif 'car' in state_attr('image_processing.tensorflow_front', 'summary') %}
#            Car Detected
#          {% else %}
#            {{states('sensor.last_object_front')}}
#          {% endif %}
#  
#  - platform: imap_email_content
#    server: imap.gmail.com
#    name: cp_packages_coming_today
#    port: 993
#    username: !secret gmail_uname
#    password: !secret hass_pass
#    senders:
#    - !secret my_email
#    - ceskaposta@cpost.cz
#    - !secret wife_email
#    value_template: >-
#      {% if 'Informace o Vaší zásilce' in subject %}
#        delivery
#      {% elif 'reset state of package sensor' in subject %}
#        no_delivery
#      {% endif %}

#  - platform: imap_email_content
#    server: imap.gmail.com
#    name: dpd_packages_coming_today
#    port: 993
#    username: !secret gmail_uname
#    password: !secret hass_pass
#    senders:
#    - !secret my_email
#    - NOREPLY@dpd.cz
#    - !secret wife_email
#    value_template: >-
#      {% if 'Dnes Vám' in subject %}
#        delivery
#      {% elif 'reset state of package sensor' in subject %}
#        no_delivery
#      {% endif %}
#
#  - platform: imap_email_content
#    server: imap.gmail.com
#    name: dhl_packages_coming_today
#    port: 993
#    username: !secret gmail_uname
#    password: !secret hass_pass
#    senders:
#    - !secret my_email
#    - NoReply.ODD@dhl.com
#    - !secret wife_email
#    value_template: >-
#      {% if 'DHL On Demand Delivery' in subject %}
#        delivery
#      {% elif 'reset state of package sensor' in subject %}
#        no_delivery
#      {% endif %}

automation:

#- id: posta_state_change
#  alias: 'Posta state change'
#  trigger:
#    platform: state
#    entity_id: sensor.cp_packages_coming_today
#  condition:
#    condition: or
#    conditions:
#      - condition: state
#        entity_id: 'sensor.cp_packages_coming_today'
#        state: 'delivery'
#      - condition: state
#        entity_id: 'sensor.cp_packages_coming_today'
#        state: 'no_delivery'
#  action:
#    service: variable.set_variable
#    data:
#      variable: posta_variable
#      value_template: "{{ states('sensor.cp_packages_coming_today')}}"
#      attributes_template: >
#        {
#          "from": "{{ state_attr('sensor.cp_packages_coming_today', 'from') }}",
#          "date": "{{ state_attr('sensor.cp_packages_coming_today', 'date') }}",
#          "subject": "{{ state_attr('sensor.cp_packages_coming_today', 'subject') }}",
#          "body": "{{ state_attr('sensor.cp_packages_coming_today', 'body') }}"
#        } 
#- id: dining_room_climate_kid_lock
#  alias: 'Dining Room Climate Kid Lock'
#  trigger:
#    platform: state
#    entity_id: climate.dining_room
#    to: 'manual'
#  action:
#    service: climate.set_operation_mode
#    data:
#      entity_id: climate.dining_room
#      operation_mode: auto
# 