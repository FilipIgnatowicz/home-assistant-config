
- id: person_in_front
  alias: Person In Front
  hide_entity: true
  initial_state: 'true'
  trigger:
#    platform: numeric_state
#    entity_id: sensor.front_human_detection
#    above: 18
    platform: state
    entity_id: binary_sensor.human_front
    to: 'on'
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.person_in_front.attributes.last_triggered | default(0)) | int > 600)}}'
    - condition: or
      conditions:
      - condition: time
        after: '23:00:00'
        before: '7:00:00'
      - condition: state
        entity_id: sensor.alarm_state_3_motion_sensors
        state: 'armed_away'
        for:
          minutes: 1
      - condition: state
        entity_id: sensor.alarm_state_3_motion_sensors
        state: 'triggered'  
  action:
    service: notify.ios_seans_iphone_x
    data:
      title: "House Watch"
      message: "There's a Person in Front of the House"
      data:
        push:
          category: camera
        entity_id: camera.front_last_person

#      - condition: template
#        value_template: "{{ states.sensor.alarm_state_3_motion_sensors.state in ['armed_away', 'triggered'] }}"


- id: person_in_back
  alias: Person In Back
  hide_entity: true
  initial_state: 'true'
  trigger:
#    platform: numeric_state
#    entity_id: sensor.back_human_detection
#    above: 18
    platform: state
    entity_id: binary_sensor.human_back
    to: 'on'
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.person_in_back.attributes.last_triggered | default(0)) | int > 600)}}'
    - condition: or
      conditions:
      - condition: time
        after: '23:00:00'
        before: '7:00:00'
      - condition: state
        entity_id: sensor.alarm_state_3_motion_sensors
        state: 'armed_away'
        for:
          minutes: 1
      - condition: state
        entity_id: sensor.alarm_state_3_motion_sensors
        state: 'triggered'
  action:
    service: notify.ios_seans_iphone_x
    data:
      title: "House Watch"
      message: "There's a Person in Back of the House"
      data:
        push:
          category: camera
        entity_id: camera.back_last_person



- id: person_on_left
  alias: Person On Left
  hide_entity: true
  initial_state: 'true'
  trigger:
#    platform: numeric_state
#    entity_id: sensor.left_human_detection
#    above: 18
    platform: state
    entity_id: binary_sensor.human_left
    to: 'on'
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.person_on_left.attributes.last_triggered | default(0)) | int > 600)}}'
    - condition: or
      conditions:
      - condition: time
        after: '23:00:00'
        before: '7:00:00'
      - condition: state
        entity_id: sensor.alarm_state_3_motion_sensors
        state: 'armed_away'
        for:
          minutes: 1
      - condition: state
        entity_id: sensor.alarm_state_3_motion_sensors
        state: 'triggered'  
  action:
    service: notify.ios_seans_iphone_x
    data:
      title: "House Watch"
      message: "There's a Person on the Left Side of the House"
      data:
        push:
          category: camera
        entity_id: camera.left_last_person

- id: person_on_right
  alias: Person On Right
  hide_entity: true
  initial_state: 'true'
  trigger:
#    platform: numeric_state
#    entity_id: sensor.right_human_detection
#    above: 18
    platform: state
    entity_id: binary_sensor.human_right
    to: 'on'
  condition:
    condition: and
    conditions:
    - condition: template
      value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.person_on_right.attributes.last_triggered | default(0)) | int > 600)}}'
    - condition: or
      conditions:
      - condition: time
        after: '23:00:00'
        before: '7:00:00'
      - condition: state
        entity_id: sensor.alarm_state_3_motion_sensors
        state: 'armed_away'
        for:
          minutes: 1
      - condition: state
        entity_id: sensor.alarm_state_3_motion_sensors
        state: 'triggered'  
  action:
    service: notify.ios_seans_iphone_x
    data:
      title: "House Watch"
      message: "There's a Person on the Right Side of the House"
      data:
        push:
          category: camera
        entity_id: camera.right_last_person

#- id: person_in_front_hassbian
#  alias: Person In Front
#  trigger:
#    platform: state
#    entity_id: sensor.object_detection_front
#    to: 'Person Detected'
#  condition:
#    condition: or
#    conditions:
#    - condition: time
#      after: '21:00:00'
#      before: '7:00:00'
#    - condition: template
#      value_template: "{{ states.device_tracker.sean_s_iphone_x.state != 'home' }}"
#  action:
#    service: notify.ios_seans_iphone_x
#    data:
#      title: "House Watch"
#      message: "There's a Person in Front of the House"
#      data:
#        push:
#          category: camera
#        entity_id: camera.front
#
#- id: person_in_back_hassbian
#  alias: Person In Back
#  trigger:
#    platform: state
#    entity_id: sensor.object_detection_back
#    to: 'Person Detected'
#  condition:
#    condition: or
#    conditions:
#    - condition: time
#      after: '21:00:00'
#      before: '7:00:00'
#    - condition: template
#      value_template: "{{ states.device_tracker.sean_s_iphone_x.state != 'home' }}"
#  action:
#    service: notify.ios_seans_iphone_x
#    data:
#      title: "House Watch"
#      message: "There's a Person in Back of the House"
#      data:
#        push:
#          category: camera
#        entity_id: camera.back
#
#- id: person_on_left_hassbian
#  alias: Person On Left
#  trigger:
#    platform: state
#    entity_id: sensor.object_detection_left
#    to: 'Person Detected'
#  condition:
#    condition: or
#    conditions:
#    - condition: time
#      after: '21:00:00'
#      before: '7:00:00'
#    - condition: template
#      value_template: "{{ states.device_tracker.sean_s_iphone_x.state != 'home' }}"
#  action:
#    service: notify.ios_seans_iphone_x
#    data:
#      title: "House Watch"
#      message: "There's a Person on the Left Side of the House"
#      data:
#        push:
#          category: camera
#        entity_id: camera.left
#
#- id: person_on_right_hassbian
#  alias: Person On Right
#  trigger:
#    platform: state
#    entity_id: sensor.object_detection_right
#    to: 'Person Detected'
#  condition:
#    condition: or
#    conditions:
#    - condition: time
#      after: '21:00:00'
#      before: '7:00:00'
#    - condition: template
#      value_template: "{{ states.device_tracker.sean_s_iphone_x.state != 'home' }}"
#  action:
#    service: notify.ios_seans_iphone_x
#    data:
#      title: "House Watch"
#      message: "There's a Person on the Right Side of the House"
#      data:
#        push:
#          category: camera
#        entity_id: camera.right
#
#- id: car_in_front_hassbian
#  alias: Car In Front
#  trigger:
#    platform: state
#    entity_id: sensor.object_detection_front
#    to: 'Car Detected'
#  condition:
#    condition: state
#    entity_id: 'device_tracker.sean_s_iphone_x'
#    state: 'home'
#  action:
#    service: notify.ios_seans_iphone_x
#    data:
#      title: "House Watch"
#      message: "There's a Car in Front of the House"
#      data:
#        push:
#          category: camera
#        entity_id: camera.front

- id: turn_off_front_security_light_if_it_gets_windy
  alias: 'Turn Off Front Security Light If It Gets Windy'
  hide_entity: true
  initial_state: 'true'
  trigger:
    platform: numeric_state
    entity_id: sensor.dark_sky_wind_gust
    above: 7
  condition:
    condition: time
    after: '21:00:00'
    before: '7:00:00'
  action:
    service: switch.turn_off
    data:
      entity_id: switch.fibaro_system_fgs223_double_relay_switch


- id: turn_off_front_security_light_if_its_windy
  alias: "Turn Off Front Security Light If It's Windy"
  hide_entity: true
  initial_state: 'true'
  trigger:
    platform: time
    at: '21:00:00'
  condition:
    condition: numeric_state
    entity_id: sensor.dark_sky_wind_gust
    above: 7
  action:
    service: switch.turn_off
    data:
      entity_id: switch.fibaro_system_fgs223_double_relay_switch

- id: turn_on_front_security_light_in_morning
  alias: 'Turn On Front Security Light In Morning'
  hide_entity: true
  initial_state: 'true'
  trigger:
    platform: time
    at: '9:00:00'
  action:
    service: switch.turn_on
    data:
      entity_id: switch.fibaro_system_fgs223_double_relay_switch

- id: front_right_security_lights_on_if_human
  alias: 'Front+Right Security Lights on if Human'
  hide_entity: true
  initial_state: 'true'
  trigger:
#    - platform: numeric_state
#      entity_id: sensor.front_human_detection
#      above: 18
#    - platform: numeric_state
#      entity_id: sensor.right_human_detection
#      above: 18
    - platform: state
      entity_id: binary_sensor.human_front
      to: 'on'
    - platform: state
      entity_id: binary_sensor.human_right
      to: 'on'
  condition:
    condition: time
    after: '21:00:00'
    before: '7:00:00'
  action:
    service: switch.turn_on
    data:
      entity_id: switch.fibaro_system_fgs223_double_relay_switch

- id: back_left_security_lights_on_if_human
  alias: 'Back+Left Security Lights on if Human'
  hide_entity: true
  initial_state: 'true'
  trigger:
#    - platform: numeric_state
#      entity_id: sensor.back_human_detection
#      above: 18
#    - platform: numeric_state
#      entity_id: sensor.left_human_detection
#      above: 18
    - platform: state
      entity_id: binary_sensor.human_back
      to: 'on'
    - platform: state
      entity_id: binary_sensor.human_left
      to: 'on'
  condition:
    condition: time
    after: '21:00:00'
    before: '7:00:00'
  action:
    service: switch.turn_on
    data:
      entity_id: switch.fibaro_system_fgs223_double_relay_switch_2

#- id: garage_open
#  alias: 'Garage Door Open'
#  hide_entity: true
#  initial_state: 'true'
#  trigger:
#    platform: state
#    entity_id: sensor.zone_14_garage_door
#    to: 'on'
#    for:
#      minutes: 10
#  action:
#    service: notify.sean_alena
#    data:
#      title: "Garage is Open"
#      message: "The garage door has been open for 10 minutes."


- id: alarm_is_on_alena_home
  alias: 'Alarm is on - Alena is home'
  hide_entity: true
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: device_tracker.alena_s_iphone
    to: 'home'
  condition:
    condition: state
    entity_id: sensor.alarm_state_3_motion_sensors
    state: armed_away
  action:
    service: notify.ios_alenas_iphone
    data:
      title: "Warning: Alarm On"
      message: "The alarm is turned on. Remember to turn it off before opening the door."
      
- id: alarm_is_on_sean_home
  alias: Alarm is on - Sean is home
  hide_entity: true
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: device_tracker.sean_s_iphone_x
    to: 'home'
  condition:
    condition: state
    entity_id: sensor.alarm_state_3_motion_sensors
    state: armed_away
  action:
    service: notify.ios_seans_iphone_x
    data:
      title: "Warning: Alarm On"
      message: "The alarm is turned on. Remember to turn it off before opening the door."
      
- id: alarm_turned_on_alena
  alias: 'Alarm turned on notification - Alena'
  hide_entity: true
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: sensor.alarm_state_3_motion_sensors
      to: 'armed_away'
    - platform: state
      entity_id: sensor.alarm_state_3_motion_sensors
      to: 'armed'
  action:
    service: notify.ios_alenas_iphone
    data:
      title: "Alarm is On At Home"
      message: "The alarm has been activated at home"
  
- id: alarm_turned_off_alena
  alias: 'Alarm turned off notification - Alena'
  hide_entity: true
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: sensor.alarm_state_3_motion_sensors
      from: 'armed_away'
      to: 'disarmed'
    - platform: state
      entity_id: sensor.alarm_state_3_motion_sensors
      from: 'armed'
      to: 'disarmed'
  action:
    service: notify.ios_alenas_iphone
    data:
      title: "Alarm is Off At Home"
      message: "The alarm has been turned off at home"
      
- id: alarm_turned_on_sean
  alias: 'Alarm turned on notification - Sean'
  hide_entity: true
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: sensor.alarm_state_3_motion_sensors
      to: 'armed_away'
    - platform: state
      entity_id: sensor.alarm_state_3_motion_sensors
      to: 'armed'
  condition:
    condition: template
    value_template: "{{ not is_state('sensor.sean_location', 'Traveling') }}"
  action:
    service: notify.ios_seans_iphone_x
    data:
      title: "Alarm is On At Home"
      message: "The alarm has been activated at home"
  
- id: alarm_turned_off_sean
  alias: 'Alarm turned off notification - Sean'
  hide_entity: true
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: sensor.alarm_state_3_motion_sensors
      from: 'armed_away'
      to: 'disarmed'
    - platform: state
      entity_id: sensor.alarm_state_3_motion_sensors
      from: 'armed'
      to: 'disarmed'
  action:
    service: notify.ios_seans_iphone_x
    data:
      title: "Alarm is Off At Home"
      message: "The alarm has been turned off at home"

- id: alarm_triggered
  alias: 'Alarm is triggered'
  hide_entity: true
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: sensor.alarm_state_3_motion_sensors
      from: 'armed_away'
      to: 'triggered'
    - platform: state
      entity_id: sensor.alarm_state_3_motion_sensors
      from: 'armed_night'
      to: 'triggered'
    - platform: state
      entity_id: sensor.alarm_state_3_motion_sensors
      from: 'arm_home'
      to: 'triggered'
  action:
    service: notify.sean_alena
    data:
      title: "!!Alarm Triggered!!"
      message: "The alarm at home has been triggered and is now alarming!"

- id: sensor_notification
  alias: 'Sensor Notification'
  hide_entity: true
  initial_state: 'false'
  trigger:
    - platform: state
      entity_id: binary_sensor.library_zone_6
      to: 'on'
    - platform: state
      entity_id: binary_sensor.master_bedroom_zone_5
      to: 'on'
    - platform: state
      entity_id: binary_sensor.master_closet_zone_8
      to: 'on'
    - platform: state
      entity_id: binary_sensor.play_room_zone_3
      to: 'on'
    - platform: state
      entity_id: binary_sensor.sophies_room_zone_10
      to: 'on'
    - platform: state
      entity_id: binary_sensor.play_room_zone_3
      to: 'on'
  action:
    service: notify.ios_seans_iphone_x
    data:
      title: "Activity Notification"
      message: "Activity Notification"

- id: popup_on_kiosk_back
  alias: Popup on Kiosk Back
  hide_entity: true
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: binary_sensor.human_back
    to: 'on'
  action:
    - service: browser_mod.command
      data:
        command: more-info
        entity_id: camera.back
        deviceID:
          - !secret kindle_kitchen_deviceid
        large: true
    - service: fully_kiosk.screensaver_stop
      data:
        entity_id: display.kindle_fire_kitchen

- id: popup_on_kiosk_front
  alias: Popup on Kiosk Front
  hide_entity: true
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: binary_sensor.human_front
    to: 'on'
  action:
    - service: browser_mod.command
      data:
        command: more-info
        entity_id: camera.front
        deviceID:
          - !secret kindle_kitchen_deviceid
    - service: fully_kiosk.screensaver_stop
      data:
        entity_id: display.kindle_fire_kitchen

- id: popup_on_kiosk_left
  alias: Popup on Kiosk Left
  hide_entity: true
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: binary_sensor.human_left
    to: 'on'
  action:
    - service: browser_mod.command
      data:
        command: more-info
        entity_id: camera.left
        deviceID:
          - !secret kindle_kitchen_deviceid
        large: true
    - service: fully_kiosk.screensaver_stop
      data:
        entity_id: display.kindle_fire_kitchen

- id: popup_on_kiosk_right
  alias: Popup on Kiosk Right
  hide_entity: true
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: binary_sensor.human_right
    to: 'on'
  action:
    - service: browser_mod.command
      data:
        command: more-info
        entity_id: camera.right
        deviceID:
          - !secret kindle_kitchen_deviceid
        large: true
    - service: fully_kiosk.screensaver_stop
      data:
        entity_id: display.kindle_fire_kitchen

- id: keep_fully_kiosk_screen_on_human
  alias: Keep Fully Kiosk Screen On
  hide_entity: true
  initial_state: 'true'
  trigger:
  - platform: state
    entity_id: binary_sensor.human_back
    to: 'off'
    for:
      seconds: 15
  - platform: state
    entity_id: binary_sensor.human_front
    to: 'off'
    for:
      seconds: 15
  - platform: state
    entity_id: binary_sensor.human_left
    to: 'off'
    for:
      seconds: 15
  - platform: state
    entity_id: binary_sensor.human_right
    to: 'off'
    for:
      seconds: 15
  action:
    - service: fully_kiosk.screensaver_stop
      data:
        entity_id: display.kindle_fire_kitchen

- id: keep_fully_kiosk_screen_on_human
  alias: Keep Fully Kiosk Screen On
  hide_entity: true
  initial_state: 'true'
  trigger:
  - platform: state
    entity_id: binary_sensor.human_back
    to: 'off'
    for:
      seconds: 30
  - platform: state
    entity_id: binary_sensor.human_front
    to: 'off'
    for:
      seconds: 30
  - platform: state
    entity_id: binary_sensor.human_left
    to: 'off'
    for:
      seconds: 30
  - platform: state
    entity_id: binary_sensor.human_right
    to: 'off'
    for:
      seconds: 30
  action:
    - service: fully_kiosk.screensaver_stop
      data:
        entity_id: display.kindle_fire_kitchen

- id: close_popup_on_kiosk_back
  alias: close_Popup on Kiosk Back
  hide_entity: true
  initial_state: 'true'
  trigger:
  - platform: state
    entity_id: binary_sensor.human_back
    to: 'off'
    for:
      minutes: 1
  - platform: state
    entity_id: binary_sensor.human_front
    to: 'off'
    for:
      minutes: 1
  - platform: state
    entity_id: binary_sensor.human_left
    to: 'off'
    for:
      minutes: 1
  - platform: state
    entity_id: binary_sensor.human_right
    to: 'off'
    for:
      minutes: 1
  condition:
    condition: and
    conditions:
    - condition: state
      entity_id: binary_sensor.human_right
      state: 'off'
      for:
        minutes: 1
    - condition: state
      entity_id: binary_sensor.human_left
      state: 'off'
      for:
        minutes: 1
    - condition: state
      entity_id: binary_sensor.human_front
      state: 'off'
      for:
        minutes: 1
    - condition: state
      entity_id: binary_sensor.human_back
      state: 'off'
      for:
        minutes: 1
  action:
    - service: browser_mod.command
      data:
        command: close-popup
    - service: browser_mod.lovelace_reload
      data:
        deviceID:
          - !secret kindle_kitchen_deviceid


- alias: 'Update Last Motion'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.comp_rm_motion_template
      to: 'on'
    - platform: state
      entity_id:
      - binary_sensor.play_room_zone_3
      - binary_sensor.living_room_zone_4
      - binary_sensor.master_bedroom_zone_5
      - binary_sensor.library_zone_6
      - binary_sensor.master_closet_zone_8
      - binary_sensor.sophies_room_zone_10
      - binary_sensor.garage_zone_12
      - binary_sensor.glass_break_sensor_zone_11
      to: 'Detected'
  action:
    service: variable.set_variable
    data:
      variable: last_motion
      attributes_template: >
        {
          "history_1": "{{ variable.state }}",
          "history_2": "{{ variable.attributes.history_1 }}",
          "history_3": "{{ variable.attributes.history_2 }}",
          "history_4": "{{ variable.attributes.history_3 }}",
          "history_5": "{{ variable.attributes.history_4 }}",
          "history_6": "{{ variable.attributes.history_5 }}",
          "history_7": "{{ variable.attributes.history_6 }}",
          "history_8": "{{ variable.attributes.history_7 }}",
          "history_9": "{{ variable.attributes.history_8 }}",
          "history_10": "{{ variable.attributes.history_9 }}"
          }


- alias: 'Update Last Door/Window'
  initial_state: 'on'
  trigger:
    - platform: state
      entity_id:
        - binary_sensor.comp_rm_motion_template
      to: 'on'
    - platform: state
      entity_id:
      - binary_sensor.play_room_zone_3
      - binary_sensor.living_room_zone_4
      - binary_sensor.master_bedroom_zone_5
      - binary_sensor.library_zone_6
      - binary_sensor.master_closet_zone_8
      - binary_sensor.sophies_room_zone_10
      - binary_sensor.garage_zone_12
      - binary_sensor.glass_break_sensor_zone_11
      to: 'Detected'
  action:
    service: variable.set_variable
    data:
      variable: last_door_window
      attributes_template: >
        {
          "history_1": "{{ variable.state }}",
          "history_2": "{{ variable.attributes.history_1 }}",
          "history_3": "{{ variable.attributes.history_2 }}",
          "history_4": "{{ variable.attributes.history_3 }}",
          "history_5": "{{ variable.attributes.history_4 }}",
          "history_6": "{{ variable.attributes.history_5 }}",
          "history_7": "{{ variable.attributes.history_6 }}",
          "history_8": "{{ variable.attributes.history_7 }}",
          "history_9": "{{ variable.attributes.history_8 }}",
          "history_10": "{{ variable.attributes.history_9 }}"
          }

- alias: 'Record Human In Front'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.human_front
    to: 'on'
  action:
    - service: rest_command.record_human_front

- alias: 'Record Human In Back'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.human_back
    to: 'on'
  action:
    - service: rest_command.record_human_back

- alias: 'Record Human In Left'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.human_left
    to: 'on'
  action:
    - service: rest_command.record_human_left

- alias: 'Record Human In Right'
  initial_state: 'on'
  trigger:
    platform: state
    entity_id: binary_sensor.human_right
    to: 'on'
  action:
    - service: rest_command.record_human_right