######################################################
#                Bosch Dishwasher Status             #
######################################################

# When dishwasher state is run , set status Running
# When dishwasher switches to finished, set status to Clean
# When state is Clean and door has been opened for 3 minutes, set status to Dirty
# Notify on Alena's phone and alexa kitchen when door opened

- id: set_dishwasher_running
  alias: Set Dishwasher Running
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: sensor.bosch_dishwasher_state
    to: 'run'
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.bosch_dishwasher_status
        option: Running

- id: set_dishwasher_clean
  alias: Set Dishwasher Clean
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: sensor.bosch_dishwasher_state
    to: 'finished'
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.bosch_dishwasher_status
        option: Clean

- id: start_dishwasher_emptying
  alias: Set Dishwasher Emptying
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: sensor.bosch_dishwasher_door
    to: 'open'
  condition:
    condition: state
    entity_id: input_select.bosch_dishwasher_status
    state: Clean 
  action:
    - service: timer.start
      data:
        entity_id: timer.bosch_dishwasher_emptying
    - service: input_select.select_option
      data:
        entity_id: input_select.bosch_dishwasher_status
        option: Emptying

- id: pause_dishwasher_emptying
  alias: Pause Dishwasher Emptying
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: sensor.bosch_dishwasher_door
    to: 'closed'
  condition:
    condition: state
    entity_id: input_select.bosch_dishwasher_status
    state: Emptying 
  action:
    - service: timer.pause
      data:
        entity_id: timer.bosch_dishwasher_emptying
    - service: input_select.select_option
      data:
        entity_id: input_select.bosch_dishwasher_status
        option: Clean

- id: set_dishwasher_dirty
  alias: Set Dishwasher Dirty
  initial_state: 'true'
  trigger:
    platform: event
    event_type: timer.finished
    event_data:
      entity_id: timer.bosch_dishwasher_emptying
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.bosch_dishwasher_status
        option: Dirty

- id: notify_clean_dishes
  alias: Clean Dishes Notification
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: input_select.bosch_dishwasher_status
    from: 'Running'
    to: 'Clean'
  action:
    service: notify.mobile_app_alena_s_iphone
    data:
      title: "Dishwasher Update"
      message: "Dishes Are Clean"
      data:
        push:
          thread-id: "appliances"


- id: fire_notify_clean_dishes
  alias: "TTS Notify Clean Dishes to Bar Kindle"
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: sensor.bosch_dishwasher_door
    to: 'open'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.fire_notify_clean_dishes.attributes.last_triggered | default(0)) | int > 150)}}'
      - condition: or
        conditions:
          - condition: state
            entity_id: input_select.bosch_dishwasher_status
            state: 'Clean'
          - condition: state
            entity_id: input_select.bosch_dishwasher_status
            state: 'Emptying'
  action:
  - data:
      data:
        type: tts
      message: "The dishes are clean."
    service: notify.alexa_media_alexa_kitchen_bar
      
      
- id: fire_notify_running_dishes
  alias: "TTS Notify Dishes Still Running to Bar Kindle"
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: sensor.bosch_dishwasher_door
    to: 'open'
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ (as_timestamp(now()) - as_timestamp(states.automation.fire_notify_clean_dishes.attributes.last_triggered | default(0)) | int > 150)}}'
      - condition: state
        entity_id: sensor.bosch_dishwasher_state
        state: 'run'
      - condition: template
        value_template: >
          {{ if (states('sensor.bosch_dishwasher_time_remaining')|int < 1800) }}
  action:
  - data:
      data:
        type: tts
      message: "The dishes are not done yet."
    service: notify.alexa_media_alexa_kitchen_bar
    

#### This one isn't working yet. There's no "last changed" attribute for the dishwasher door

- id: record_dishwasher_last_door_open_time
  alias: record_dishwasher_last_door_open_time
  initial_state: 'true'
  trigger:
    platform: state
    entity_id:  sensor.bosch_dishwasher_door
    to: 'open'
  action:
    service: variable.set_variable
    data:
      variable: dishwasher_last_door_open
      value_template: '{{ as_timestamp(now()) }}'

- id: fire_notify_dishwasher_door_open
  alias: "TTS Notify Dishwasher Door Open"
  initial_state: 'false'
  trigger:
    minutes: '/5'
    platform: time_pattern
  condition:
    condition: and
    conditions:
      - condition: template
        value_template: '{{ ((as_timestamp(now()) - variable.dishwasher_last_door_open | default(0)) | int > 300)}}'
      - condition: state
        entity_id: input_select.bosch_dishwasher_status
        state: 'Running'
      - condition: state
        entity_id: sensor.bosch_dishwasher_door
        state: 'open'
      - condition: state
        entity_id: device_tracker.sean_s_iphone_x
        state: 'home'
  action:
  - data:
      data:
        type: tts
      message: "Sorry, it looks like you wanted to run the dishes but you left the door open on the dishwasher."
    service: notify.alexa_media_alexa_kitchen_bar
  - data:
      data:
        type: tts
      message: "Sorry, it looks like you wanted to run the dishes but you left the door open on the dishwasher."
    service: notify.alexa_media_alexa_master_closet
  - data:
      title: "Dishwasher Update"
      message: "Looks like you left the dishwasher door open"
    service: notify.mobile_app_sean_s_iphone_x


################### MIELE WASHING MACHINE ####################

#      - Empty
#      - Wash Cycle
#      - First Rest
#      - First Spin Cycle
#      - Second Rest
#      - Second Spin Cycle
#      - Clean

- id: set_miele_washing_wash_cycle
  alias: 'Set Miele washing machine wash cycle'
  initial_state: 'true'
  trigger:
    platform: numeric_state
    entity_id: sensor.miele_washing_machine_power
    above: 2000
  condition:
    condition: state
    entity_id: input_select.miele_washing_machine_status
    state: Empty
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.miele_washing_machine_status
        option: Wash Cycle

- id: miele_washing_first_rest
  alias: 'Set Miele washing machine first rest'
  initial_state: 'true'
  trigger:
    platform: numeric_state
    entity_id: sensor.miele_washing_machine_power
    below: 1000
    for: 
      minutes: 10
  condition:
    condition: state
    entity_id: input_select.miele_washing_machine_status
    state: Wash Cycle
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.miele_washing_machine_status
        option: First Rest

- id: set_miele_washing_first_spin_cycle
  alias: 'Set Miele washing machine first spin cycle'
  initial_state: 'true'
  trigger:
    platform: numeric_state
    entity_id: sensor.miele_washing_machine_power
    above: 2000
  condition:
    condition: state
    entity_id: input_select.miele_washing_machine_status
    state: First Rest
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.miele_washing_machine_status
        option: First Spin Cycle
        
- id: set_miele_washing_second_rest
  alias: 'Set Miele washing machine second rest'
  initial_state: 'true'
  trigger:
    platform: numeric_state
    entity_id: sensor.miele_washing_machine_power
    below: 1000
    for: 
      minutes: 12
  condition:
    condition: state
    entity_id: input_select.miele_washing_machine_status
    state: First Spin Cycle
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.miele_washing_machine_status
        option: Second Rest

- id: set_miele_washing_second_spin_cycle
  alias: 'Set Miele washing machine second spin cycle'
  initial_state: 'true'
  trigger:
    platform: numeric_state
    entity_id: sensor.miele_washing_machine_power
    above: 2000
  condition:
    condition: state
    entity_id: input_select.miele_washing_machine_status
    state: Second Rest
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.miele_washing_machine_status
        option: Second Spin Cycle

- id: set_miele_washing_finishing
  alias: 'Set Miele washing machine finishing'
  initial_state: 'true'
  trigger:
    platform: numeric_state
    entity_id: sensor.miele_washing_machine_power
    above: 525
    below: 700
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: input_select.miele_washing_machine_status
        state: Wash Cycle
      - condition: state
        entity_id: input_select.miele_washing_machine_status
        state: First Rest
      - condition: state
        entity_id: input_select.miele_washing_machine_status
        state: First Spin Cycle
      - condition: state
        entity_id: input_select.miele_washing_machine_status
        state: Second Rest
      - condition: state
        entity_id: input_select.miele_washing_machine_status
        state: Second Spin Cycle
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.miele_washing_machine_status
        option: Finishing

- id: miele_washing_clean
  alias: 'Set Miele washing machine clean'
  initial_state: 'true'
  trigger:
    platform: numeric_state
    entity_id: sensor.miele_washing_machine_power
    below: 3
  condition:
    condition: state
    entity_id: input_select.miele_washing_machine_status
    state: Finishing
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.miele_washing_machine_status
        option: Clean

- id: miele_washing_empty
  alias: 'Set Miele washing machine empty'
  initial_state: 'true'
  trigger:
    platform: numeric_state
    entity_id: sensor.miele_washing_machine_power
    below: 1
    for: 
      minutes: 2
  condition:
    condition: state
    entity_id: input_select.miele_washing_machine_status
    state: Clean
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.miele_washing_machine_status
        option: Empty

- id: notify_miele_clean
  alias: Miele clean laundry notification
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: input_select.miele_washing_machine_status
    to: 'Clean'
  action:
    service: notify.mobile_app_alena_s_iphone
    data:
      title: "Miele Washing Machine Update"
      message: "Laundry is Done"
      data:
        push:
          thread-id: "appliances"


################### LG WASHING MACHINE ####################

#      - Empty
#      - Starting Up
#      - Wash Cycle
#      - Spin Cycle
#      - Clean

- id: set_lg_washing_starting_up
  alias: 'Set lg washing machine starting up'
  initial_state: 'true'
  trigger:
    platform: numeric_state
    entity_id: sensor.lg_washing_machine_power
    above: 75
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: input_select.lg_washing_machine_status
        state: Empty
      - condition: state
        entity_id: input_select.lg_washing_machine_status
        state: Clean
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.lg_washing_machine_status
        option: Starting Up

- id: lg_washing_wash_cycle
  alias: 'Set lg washing machine washing'
  initial_state: 'true'
  trigger:
    platform: numeric_state
    entity_id: sensor.lg_washing_machine_power
    above: 1000
  condition:
    condition: state
    entity_id: input_select.lg_washing_machine_status
    state: Starting Up
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.lg_washing_machine_status
        option: Wash Cycle

- id: lg_washing_washing
  alias: 'Set lg washing machine spin cycle'
  initial_state: 'true'
  trigger:
    platform: numeric_state
    entity_id: sensor.lg_washing_machine_power
    below: 1000
  condition:
    condition: state
    entity_id: input_select.lg_washing_machine_status
    state: Wash Cycle
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.lg_washing_machine_status
        option: Spin Cycle

- id: set_lg_washing_clean
  alias: 'Set lg washing machine clean'
  initial_state: 'true'
  trigger:
    platform: numeric_state
    entity_id: sensor.lg_washing_machine_power
    below: 1
    for: 
      minutes: 3
  condition:
    condition: or
    conditions:
      - condition: state
        entity_id: input_select.lg_washing_machine_status
        state: Wash Cycle
      - condition: state
        entity_id: input_select.lg_washing_machine_status
        state: Spin Cycle
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.lg_washing_machine_status
        option: Clean

- id: lg_washing_empty
  alias: 'Set lg washing machine empty'
  initial_state: 'true'
  trigger:
    platform: numeric_state
    entity_id: sensor.lg_washing_machine_power
    below: 0.01
    for: 
      minutes: 5
  condition:
    condition: state
    entity_id: input_select.lg_washing_machine_status
    state: Clean
  action:
    - service: input_select.select_option
      data:
        entity_id: input_select.lg_washing_machine_status
        option: Empty

- id: notify_lg_clean
  alias: LG clean laundry
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: input_select.lg_washing_machine_status
    to: 'Clean'
  action:
    service: notify.mobile_app_alena_s_iphone
    data:
      title: "LG Washing Machine Update"
      message: "Laundry is Done"
      data:
        push:
          thread-id: "appliances"
      
      
      
      
############## SOPHIE AIR PURIFIER ON OFF #############


- id: turn_on_sophies_air_purifier_if_air_is_bad
  alias: "Turn on Sophie's Air Purifier if the air is bad"
  initial_state: 'true'
  trigger:
    platform: numeric_state
    entity_id: sensor.hlubocepy_air_quality
    above: 70
  condition:
    condition: time
    after: '19:00:00'
    before: '7:00:00'
  action:
    service: input_boolean.turn_on
    data:
      entity_id: input_boolean.sophies_air_purifier


- id: turn_on_sophies_air_purifier_if_air_is_bad_2
  alias: "Turn on Sophie's Air Purifier if the air is bad 2"
  initial_state: 'true'
  trigger:
    platform: time
    at: '19:00:00'
  condition:
    condition: numeric_state
    entity_id: sensor.hlubocepy_air_quality
    above: 70
  action:
    service: input_boolean.turn_on
    data:
      entity_id: input_boolean.sophies_air_purifier

- id: turn_off_sophies_air_purifier_in_the_morning
  alias: "Turn off Sophie's Air Purifier in the morning"
  initial_state: 'true'
  trigger:
    platform: time
    at: '8:00:00'
  action:
    service: input_boolean.turn_off
    data:
      entity_id: input_boolean.sophies_air_purifier

- id: turn_on_sophie_air_purifier_during_day_if_motion
  alias: "Turn on Sophie's Air Purifier During the Day if Motion in Room"
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: binary_sensor.sophies_room_zone_10
      to: 'on'
  condition:
    condition: and
    conditions:
      - condition: numeric_state
        entity_id: sensor.hlubocepy_air_quality
        above: 70  
      - condition: state
        entity_id: device_tracker.sophie
        state: 'home'
      - condition: time
        after: '8:00:00'
        before: '19:00:00'
  action:
    service: input_boolean.turn_on
    data:
      entity_id: input_boolean.sophies_air_purifier

- id: turn_off_sophie_air_purifier_aqi_left_home
  alias: "Turn off Sophie's Air Purifier for AQI or Left Home"
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: device_tracker.sophie
      from: 'home'
    - platform: numeric_state
      entity_id: sensor.hlubocepy_air_quality
      below: 65
  action:
    service: input_boolean.turn_off
    data:
      entity_id: input_boolean.sophies_air_purifier

- id: turn_off_sophie_air_purifier_if_no_motion
  alias: "Turn off Sophie's Air Purifier for No Motion"
  initial_state: 'true'
  trigger:
    - platform: state
      entity_id: binary_sensor.sophies_room_zone_10
      to: 'off'
      for: 
        minutes: 60
  condition:
    condition: time
    after: '8:00:00'
    before: '19:00:00'
  action:
    service: input_boolean.turn_off
    data:
      entity_id: input_boolean.sophies_air_purifier

############ SEBASTIAN AIR PURIFIER ON OFF ##############



- id: turn_on_sebastians_air_purifier_if_air_is_bad_at_night
  alias: "Turn on Sebastian's Air Purifier if the air is bad at night"
  initial_state: 'true'
  trigger:
    platform: numeric_state
    entity_id: sensor.hlubocepy_air_quality
    above: 70
  condition:
    condition: time
    after: '19:00:00'
    before: '8:00:00'
  action:
    service: input_boolean.turn_on
    data:
      entity_id: input_boolean.sebastians_air_purifier


- id: turn_on_sebastians_air_purifier_if_air_is_bad_at_night_2
  alias: "Turn on Sebastian's Air Purifier if the air is bad at night 2"
  initial_state: 'true'
  trigger:
    platform: time
    at: '19:00:00'
  condition:
    condition: numeric_state
    entity_id: sensor.hlubocepy_air_quality
    above: 70
  action:
    service: input_boolean.turn_on
    data:
      entity_id: input_boolean.sebastians_air_purifier

- id: turn_off_sebastians_air_purifier_in_the_morning_or_aqi
  alias: "Turn off Sebastian's Air Purifier in the morning or from AQI"
  initial_state: 'true'
  trigger:
    - platform: time
      at: '8:00:00'
    - platform: numeric_state
      entity_id: sensor.hlubocepy_air_quality
      below: 65
  action:
    service: input_boolean.turn_off
    data:
      entity_id: input_boolean.sebastians_air_purifier

- id: turn_on_sebastians_air_purifier_if_air_is_bad_for_naptime
  alias: "Turn on Sebastian's Air Purifier if the air is bad for naptime"
  initial_state: 'true'
  trigger:
    platform: numeric_state
    entity_id: sensor.hlubocepy_air_quality
    above: 70
  condition:
    condition: time
    after: '12:30:00'
    before: '16:30:00'
  action:
    service: input_boolean.turn_on
    data:
      entity_id: input_boolean.sebastians_air_purifier


- id: turn_on_sebastians_air_purifier_if_air_is_bad_for_naptime_2
  alias: "Turn on Sebastian's Air Purifier if the air is bad for naptime 2"
  initial_state: 'true'
  trigger:
    platform: time
    at: '12:30:00'
  condition:
    condition: numeric_state
    entity_id: sensor.hlubocepy_air_quality
    above: 70
  action:
    service: input_boolean.turn_on
    data:
      entity_id: input_boolean.sebastians_air_purifier

- id: turn_off_sebastians_air_purifier_after_nap
  alias: "Turn off Sebastian's Air Purifier after nap"
  initial_state: 'true'
  trigger:
    platform: time
    at: '16:30:00'
  action:
    service: input_boolean.turn_off
    data:
      entity_id: input_boolean.sebastians_air_purifier
            


###### Sophies's Air Purifier Input Boolean ########      




- id: turn_on_sophies_air_purifier_from_input_select
  alias: "Turn on Sophie's Air Purifier from Input Select"
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: input_boolean.sophies_air_purifier
    to: 'on'
  condition:
    condition: state
    entity_id: fan.sophies_room_air_purifier
    state: 'off'
  action:
    - service: fan.turn_on
      data:
        entity_id: fan.sophies_room_air_purifier
    - delay:
        seconds: 15
    - service: fan.set_speed
      data:
        entity_id: fan.sophies_room_air_purifier
        speed: Silent
    

- id: turn_on_sophies_air_purifier_from_input_select_after unavailable
  alias: "Turn on Sophie's Air Purifier from Input Select after Unavailable"
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: fan.sophies_room_air_purifier
    from: 'unavailable'
    to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.sophies_air_purifier
        state: 'on'
      - condition: template
        value_template: "{{ (as_timestamp(now())-as_timestamp(states.input_boolean.sophies_air_purifier.last_changed)) < 600 }}"
  action:
    - service: fan.turn_on
      data:
        entity_id: fan.sophies_room_air_purifier
    - delay:
        seconds: 15
    - service: fan.set_speed
      data:
        entity_id: fan.sophies_room_air_purifier
        speed: Silent

- id: turn_off_sophies_air_purifier_from_input_select
  alias: "Turn off Sophie's Air Purifier from Input Select"
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: input_boolean.sophies_air_purifier
    to: 'off'
  condition:
    condition: state
    entity_id: fan.sophies_room_air_purifier
    state: 'on'
  action:
    service: fan.turn_off
    data:
      entity_id: fan.sophies_room_air_purifier
    

- id: turn_off_sophies_air_purifier_from_input_select_after unavailable
  alias: "Turn off Sophie's Air Purifier from Input Select after Unavailable"
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: fan.sophies_room_air_purifier
    from: 'unavailable'
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.sophies_air_purifier
        state: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.sophies_air_purifier
        state: 'off'
      - condition: template
        value_template: "{{ (as_timestamp(now())-as_timestamp(states.input_boolean.sophies_air_purifier.last_changed)) < 600 }}"
  action:
    service: fan.turn_off
    data:
      entity_id: fan.sophies_room_air_purifier
      
- id: sync_sophie_air_purifier_input_boolean_to_manual_on
  alias: "Sync Sophie Air Purifier Input Boolean to Manually Turning Air Purifier On"
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: fan.sophies_room_air_purifier
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.sophies_air_purifier
        state: 'off'
  action:
    service: input_boolean.turn_on
    data:
      entity_id: input_boolean.sophies_air_purifier

- id: sync_sophie_air_purifier_input_boolean_to_manual_off
  alias: "Sync Sophie Air Purifier Input Boolean to Manually Turning Air Purifier Off"
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: fan.sophies_room_air_purifier
    to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.sophies_air_purifier
        state: 'on'
  action:
    service: input_boolean.turn_off
    data:
      entity_id: input_boolean.sophies_air_purifier




###### Sebastian's Air Purifier Input Boolean ########




- id: turn_on_sebastians_air_purifier_from_input_select
  alias: "Turn on Sebastian's Air Purifier from Input Select"
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: input_boolean.sebastians_air_purifier
    to: 'on'
  condition:
    condition: state
    entity_id: fan.sebastians_room_air_purifier
    state: 'off'
  action:
    - service: fan.turn_on
      data:
        entity_id: fan.sebastians_room_air_purifier
    - delay:
        seconds: 15
    - service: fan.set_speed
      data:
        entity_id: fan.sebastians_room_air_purifier
        speed: Silent
    

- id: turn_on_sebastians_air_purifier_from_input_select_after unavailable
  alias: "Turn on sebastian's Air Purifier from Input Select after Unavailable"
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: fan.sebastians_room_air_purifier
    from: 'unavailable'
    to: 'off'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.sebastians_air_purifier
        state: 'on'
      - condition: template
        value_template: "{{ (as_timestamp(now())-as_timestamp(states.input_boolean.sebastians_air_purifier.last_changed)) < 600 }}"
  action:
    - service: fan.turn_on
      data:
        entity_id: fan.sebastians_room_air_purifier
    - delay:
        seconds: 15
    - service: fan.set_speed
      data:
        entity_id: fan.sebastians_room_air_purifier
        speed: Silent

- id: turn_off_sebastians_air_purifier_from_input_select
  alias: "Turn off sebastian's Air Purifier from Input Select"
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: input_boolean.sebastians_air_purifier
    to: 'off'
  condition:
    condition: state
    entity_id: fan.sebastians_room_air_purifier
    state: 'on'
  action:
    service: fan.turn_off
    data:
      entity_id: fan.sebastians_room_air_purifier
    

- id: turn_off_sebastians_air_purifier_from_input_select_after unavailable
  alias: "Turn off sebastian's Air Purifier from Input Select after Unavailable"
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: fan.sebastians_room_air_purifier
    from: 'unavailable'
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.sebastians_air_purifier
        state: 'off'
      - condition: template
        value_template: "{{ (as_timestamp(now())-as_timestamp(states.input_boolean.sebastians_air_purifier.last_changed)) < 600 }}"
  action:
    service: fan.turn_off
    data:
      entity_id: fan.sebastians_room_air_purifier
      
- id: sync_sebastian_air_purifier_input_boolean_to_manual_on
  alias: "Sync sebastian Air Purifier Input Boolean to Manually Turning Air Purifier On"
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: fan.sebastians_room_air_purifier
    to: 'on'
  condition:
    condition: and
    conditions:
      - condition: state
        entity_id: input_boolean.sebastians_air_purifier
        state: 'off'
  action:
    service: input_boolean.turn_on
    data:
      entity_id: input_boolean.sebastians_air_purifier

- id: sync_sebastian_air_purifier_input_boolean_to_manual_off
  alias: "Sync sebastian Air Purifier Input Boolean to Manually Turning Air Purifier Off"
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: fan.sebastians_room_air_purifier
    to: 'off'
  condition:
    condition: state
    entity_id: input_boolean.sebastians_air_purifier
    state: 'on'
  action:
    service: input_boolean.turn_off
    data:
      entity_id: input_boolean.sebastians_air_purifier




############ BEDROOM AIR PURIFIER ON OFF ##############



- id: turn_on_master_bedroom_air_purifier_if_air_is_bad_at_night
  alias: "Turn on Master Bedroom Air Purifier if the air is bad at night"
  initial_state: 'true'
  trigger:
    platform: numeric_state
    entity_id: sensor.hlubocepy_air_quality
    above: 70
  condition:
    condition: time
    after: '21:00:00'
    before: '11:00:00'
  action:
    - service: fan.turn_on
      data:
        entity_id: fan.master_bedroom_air_purifier
    - delay:
        seconds: 15
    - service: fan.set_speed
      data:
        entity_id: fan.master_bedroom_air_purifier
        speed: Silent


- id: turn_on_master_bedroom_air_purifier_if_air_is_bad_at_night_2
  alias: "Turn on Master Bedroom Air Purifier if the air is bad at night 2"
  initial_state: 'true'
  trigger:
    platform: time
    at: '21:00:00'
  condition:
    condition: numeric_state
    entity_id: sensor.hlubocepy_air_quality
    above: 70
  action:
    - service: fan.turn_on
      data:
        entity_id: fan.master_bedroom_air_purifier
    - delay:
        seconds: 15
    - service: fan.set_speed
      data:
        entity_id: fan.master_bedroom_air_purifier
        speed: Silent

- id: turn_off_master_bedroom_air_purifier_in_the_morning_or_aqi
  alias: "Turn off Master Bedroom Air Purifier in the morning or from AQI"
  initial_state: 'true'
  trigger:
    - platform: time
      at: '11:00:00'
    - platform: numeric_state
      entity_id: sensor.hlubocepy_air_quality
      below: 65
  action:
    service: fan.turn_off
    data:
      entity_id: fan.master_bedroom_air_purifier


- id: turn_on_master_bedroom_air_purifier_if_air_is_bad_after_unavailable
  alias: "Turn on Master Bedroom Air Purifier if the air is bad after unavailable"
  initial_state: 'true'
  trigger:
    platform: state
    entity_id: fan.master_bedroom_air_purifier
    from: 'unavailable'
  condition:
    condition: and
    conditions:
      - condition: numeric_state
        entity_id: sensor.hlubocepy_air_quality
        above: 70
      - condition: time
        after: '21:00:00'
        before: '11:00:00'
  action:
    - service: fan.turn_on
      data:
        entity_id: fan.master_bedroom_air_purifier
    - delay:
        seconds: 15
    - service: fan.set_speed
      data:
        entity_id: fan.master_bedroom_air_purifier
        speed: Silent
